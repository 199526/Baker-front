echo $(date),$(hostname) > /var/log/azure/cluster-provision-cse-output.log; retrycmd_if_failure() { r=$1; w=$2; t=$3; shift && shift && shift; for i in $(seq 1 $r); do timeout $t ${@}; [ $? -eq 0  ] && break || if [ $i -eq $r ]; then return 1; else sleep $w; fi; done }; ERR_OUTBOUND_CONN_FAIL=50; retrycmd_if_failure 100 1 10 curl -v --insecure --proxy-insecure https://mcr.microsoft.com/v2/ >> /var/log/azure/cluster-provision-cse-output.log 2>&1 || time curl -v --insecure --proxy-insecure https://mcr.microsoft.com/v2/ || exit $ERR_OUTBOUND_CONN_FAIL; for i in $(seq 1 1200); do grep -Fq "EOF" /opt/azure/containers/provision.sh && break; if [ $i -eq 1200 ]; then exit 100; else sleep 1; fi; done;  ADMINUSER=azureuser MOBY_VERSION= TENANT_ID= KUBERNETES_VERSION=1.19.9 HYPERKUBE_URL=mcr.microsoft.com/oss/kubernetes/ KUBE_BINARY_URL=https://acs-mirror.azureedge.net/kubernetes/v1.19.9-hotfix.20210322/binaries/kubernetes-node-linux-amd64.tar.gz KUBEPROXY_URL=mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.19.9-hotfix.20210322.1 APISERVER_PUBLIC_KEY= SUBSCRIPTION_ID= RESOURCE_GROUP= LOCATION=eastus VM_TYPE=vmss SUBNET=aks-subnet NETWORK_SECURITY_GROUP=aks-agentpool-12857252-nsg VIRTUAL_NETWORK=aks-vnet-12857252 VIRTUAL_NETWORK_RESOURCE_GROUP= ROUTE_TABLE=aks-agentpool-12857252-routetable PRIMARY_AVAILABILITY_SET= PRIMARY_SCALE_SET= SERVICE_PRINCIPAL_CLIENT_ID=msi NETWORK_PLUGIN=kubenet NETWORK_POLICY= VNET_CNI_PLUGINS_URL=https://acs-mirror.azureedge.net/azure-cni/v1.1.8/binaries/azure-vnet-cni-linux-amd64-v1.1.8.tgz CNI_PLUGINS_URL=https://acs-mirror.azureedge.net/cni/cni-plugins-amd64-v0.7.6.tgz CLOUDPROVIDER_BACKOFF=true CLOUDPROVIDER_BACKOFF_MODE=v2 CLOUDPROVIDER_BACKOFF_RETRIES=6 CLOUDPROVIDER_BACKOFF_EXPONENT=0 CLOUDPROVIDER_BACKOFF_DURATION=5 CLOUDPROVIDER_BACKOFF_JITTER=0 CLOUDPROVIDER_RATELIMIT=true CLOUDPROVIDER_RATELIMIT_QPS=10 CLOUDPROVIDER_RATELIMIT_QPS_WRITE=10 CLOUDPROVIDER_RATELIMIT_BUCKET=100 CLOUDPROVIDER_RATELIMIT_BUCKET_WRITE=100 LOAD_BALANCER_DISABLE_OUTBOUND_SNAT=false USE_MANAGED_IDENTITY_EXTENSION=false USE_INSTANCE_METADATA=true LOAD_BALANCER_SKU=Standard EXCLUDE_MASTER_FROM_STANDARD_LB=true MAXIMUM_LOADBALANCER_RULE_COUNT=250 CONTAINER_RUNTIME=containerd CLI_TOOL=ctr CONTAINERD_DOWNLOAD_URL_BASE=https://storage.googleapis.com/cri-containerd-release/ NETWORK_MODE= KUBE_BINARY_URL=https://acs-mirror.azureedge.net/kubernetes/v1.19.9-hotfix.20210322/binaries/kubernetes-node-linux-amd64.tar.gz USER_ASSIGNED_IDENTITY_ID= API_SERVER_NAME= IS_VHD=true GPU_NODE=false SGX_NODE=false MIG_NODE=false CONFIG_GPU_DRIVER_IF_NEEDED=true ENABLE_GPU_DEVICE_PLUGIN_IF_NEEDED=false TELEPORTD_PLUGIN_DOWNLOAD_URL= CONTAINERD_VERSION= CONTAINERD_PACKAGE_URL= RUNC_VERSION= RUNC_PACKAGE_URL= /usr/bin/nohup /bin/bash -c "/bin/bash /opt/azure/containers/provision_start.sh"