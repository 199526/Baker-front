name: $(Date:yyyyMMdd)$(Rev:.r)_e2e

variables:
- group: ab-e2e

pool:
  name: 1ES-AKS-Elastic-DevInfra-Normal-Pool

jobs:
- job: E2E
  steps:
  - bash: |
      az login --service-principal -u $(AZURE_CLIENT_ID) -p $(AZURE_CLIENT_SECRET) --tenant $(AZURE_TENANT_ID)
      az account set -s $(AZURE_SUBSCRIPTION_ID)
    displayName: az login
  - bash: bash .pipelines/scripts/setup_go.sh
    displayName: setup go
  - bash: |
      go version
      cd e2e
      bash ./e2e-script.sh
    displayName: run e2e
  - publish: $(System.DefaultWorkingDirectory)/e2e
    artifact: logs
    condition: always()
  - bash: |
      #az vmss delete -g $(jq -r .group e2e/vmss.json) -n $(jq -r .vmss e2e/vmss.json)
    displayName: delete vmss
    condition: always()

- job: AccessArtifact
  dependsOn:
    - E2E
  strategy:
    matrix:
      scenario_fips:
        SCENARIO_NAME: 'fips'
      scenario_gpu:
        SCENARIO_NAME: 'gpu'
      scenario_vanilla:
        SCENARIO_NAME: 'vanilla'
    maxParallel: 3
  steps:
  - download: current
    artifact: logs
  - bash: |
      set -x
      export SCENARIO_NAME
      pwd
      echo "ls ing pwd"
      ls
      cp -a $(Pipeline.Workspace)/logs/* e2e
      echo "cd ing into e2e"
      cd e2e
      ls
      echo "in e2e"
      echo $SCENARIO_NAME
      go test -run TestE2EBasic
      echo "did it run"
      cd scenarios/fips
      ls
      cd ../..
      cd scenarios/gpu
      ls
      cd ../..
      cd scenarios/vanilla
      ls
      cd ../..